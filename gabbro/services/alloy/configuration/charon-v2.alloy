local.file_match "charon_v2_files" {
    path_targets = [
        {"__path__" = "/var/log/docker/charon-v2.log"},
    ]
    sync_period = "5s"
}

loki.source.file "charon_v2_scrape" {
    targets    = local.file_match.charon_v2_files.targets
    forward_to = [loki.process.charon_v2_process.receiver]
    tail_from_end = true
}

loki.process "charon_v2_process" {
    stage.static_labels {
        values = {
            instance = "gabbro",
            service_name = "charon-v2",
        }
    }

    stage.regex {
        expression = "^(?P<timestamp>[^ ]+)\\s+.*docker-charon-v2\\[\\d+\\]:\\s+\\[[^]]+\\]\\s+\\[(?P<level>\\S+)\\]\\s+(?P<module>\\S+):\\s+.*$"
    }

    stage.regex {
        expression = "^(?P<syslog_timestamp>[^ ]+)\\s+.*docker-charon-v2\\[\\d+\\]:\\s+(?P<json>.*)$"
    }

    stage.output {
        source = "json"
    }

    stage.json {
        expressions = {
            timestamp = "time",
            message = "message",
            level = "level",
            error = "charon.error",
            source_context = "name",
            name = "charon.name"
        }
    }

    stage.timestamp {
        source = "timestamp"
        format = "RFC3339Nano"
    }

    stage.template {
        source = "level"
        template = "{{ ToLower .Value }}"
    }

    stage.structured_metadata {
        values = {
            "message" = "",
            "name" = "",
        }
    }

    stage.labels {
        values = {
            "level" = "",
            "source_context" = ""
        }
    }

    forward_to = [loki.write.default.receiver]
}
