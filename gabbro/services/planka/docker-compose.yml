services:
  planka:
    image: ghcr.io/plankanban/planka:latest@sha256:e469d724985db3f560ef0aa2218d54536212459bf8ecbdbc9fd995fc3cbe29db
    x-tl: +!
    networks:
      - planka
      - gabbro_nginx
    volumes:
      - /mnt/celery/gabbro/planka/user-avatars:/app/public/user-avatars
      - /mnt/celery/gabbro/planka/project-background-images:/app/public/project-background-images
      - /mnt/celery/gabbro/planka/attachments:/app/private/attachments
    environment:
      VIRTUAL_PORT: 1337
      VIRTUAL_HOST: "planka.{{ haondt__letsencrypt_host }}"
      LETSENCRYPT_HOST: "*.{{ haondt__letsencrypt_host }}"
      HTTPS_METHOD: nohttp
      BASE_URL: "https://planka.{{ haondt__letsencrypt_host }}"
      DATABASE_URL: postgresql://postgres@planka-postgres/planka
      SECRET_KEY: "{{ planka__secret_key }}"

      # - TRUST_PROXY=0
      # - TOKEN_EXPIRES_IN=365 # In days

      # related: https://github.com/knex/knex/issues/2354
      # As knex does not pass query parameters from the connection string we
      # have to use environment variables in order to pass the desired values, e.g.
      # - PGSSLMODE=<value>

      # Configure knex to accept SSL certificates
      # - KNEX_REJECT_UNAUTHORIZED_SSL_CERTIFICATE=false

      DEFAULT_ADMIN_EMAIL: planka@example.com # Do not remove if you want to prevent this user from being edited/deleted
      DEFAULT_ADMIN_PASSWORD: planka
      DEFAULT_ADMIN_NAME: "Planka Admin"
      DEFAULT_ADMIN_USERNAME: "planka"

      SHOW_DETAILED_AUTH_ERRORS: true # Set to true to show more detailed authentication error messages. It should not be enabled without a rate limiter for security reasons.
      # - ALLOW_ALL_TO_CREATE_PROJECTS=true

      # - S3_ENDPOINT=
      # - S3_REGION=
      # - S3_ACCESS_KEY_ID=
      # - S3_SECRET_ACCESS_KEY=
      # - S3_BUCKET=
      # - S3_FORCE_PATH_STYLE=true

      # - OIDC_ISSUER=
      # - OIDC_CLIENT_ID=
      # - OIDC_CLIENT_SECRET=
      # - OIDC_ID_TOKEN_SIGNED_RESPONSE_ALG=
      # - OIDC_USERINFO_SIGNED_RESPONSE_ALG=
      # - OIDC_SCOPES=openid email profile
      # - OIDC_RESPONSE_MODE=fragment
      # - OIDC_USE_DEFAULT_RESPONSE_MODE=true
      # - OIDC_ADMIN_ROLES=admin
      # - OIDC_CLAIMS_SOURCE=userinfo
      # - OIDC_EMAIL_ATTRIBUTE=email
      # - OIDC_NAME_ATTRIBUTE=name
      # - OIDC_USERNAME_ATTRIBUTE=preferred_username
      # - OIDC_ROLES_ATTRIBUTE=groups
      # - OIDC_IGNORE_USERNAME=true
      # - OIDC_IGNORE_ROLES=true
      # - OIDC_ENFORCED=true

      # Email Notifications (https://nodemailer.com/smtp/)
      # - SMTP_HOST=
      # - SMTP_PORT=587
      # - SMTP_NAME=
      # - SMTP_SECURE=true
      # - SMTP_USER=
      # - SMTP_PASSWORD=
      # - SMTP_FROM="Demo Demo" <demo@demo.demo>
      # - SMTP_TLS_REJECT_UNAUTHORIZED=false

      # Optional fields: accessToken, events, excludedEvents
      # - |
      #   WEBHOOKS=[{
      #     "url": "http://localhost:3001",
      #     "accessToken": "notaccesstoken",
      #     "events": ["cardCreate", "cardUpdate", "cardDelete"],
      #     "excludedEvents": ["notificationCreate", "notificationUpdate"]
      #   }]

      # - SLACK_BOT_TOKEN=
      # - SLACK_CHANNEL_ID=

      # - GOOGLE_CHAT_WEBHOOK_URL=

      # - TELEGRAM_BOT_TOKEN=
      # - TELEGRAM_CHAT_ID=
      # - TELEGRAM_THREAD_ID=
    depends_on:
      planka-postgres:
        condition: service_healthy

  planka-postgres:
    image: docker.io/library/postgres:16-alpine@sha256:16c81787ed91d647abebb72495a20f6d6f3a805ca7003c34e57435292d3fdce2
    x-tl: ^!
    networks:
      - planka
    volumes:
      - /mnt/celery/gabbro/planka/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: planka
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planka"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  planka:
